- name: Include node task
  tags: neovim
  ansible.builtin.import_tasks: node.yml

- name: Software | neovim
  tags: neovim
  when: neovim is defined and neovim is true
  block:
    - name: Software | neovim | Install required packages
      ansible.builtin.package:
        name:
          - cmake
          - gcc
          - gettext
          - make
          - nodejs
          - ripgrep
          - unzip
        state: present

    - name: Software | neovim | Check if Neovim is installed and get its version
      ansible.builtin.command:
        cmd: nvim --version
      register: nvim_version_check
      changed_when: false
      ignore_errors: true

    - name: Software | neovim | Set Neovim installed flag
      ansible.builtin.set_fact:
        nvim_installed: "{{ nvim_version_check.rc == 0 }}"

    - name: Software | neovim | Set Neovim installed version
      when: nvim_installed is true
      ansible.builtin.set_fact:
        nvim_installed_version: "{{ nvim_version_check.stdout_lines[0] | regex_search('(\\d+\\.\\d+\\.\\d+)') }}"

    - name: Software | neovim | Check if installed version starts with the specified nvim_version
      ansible.builtin.set_fact:
        nvim_version_matches: "{{ nvim_installed_version.startswith(nvim_version) }}"
      when: nvim_installed_version is defined

    - name: Software | neovim | Install neovim
      when: not nvim_installed or nvim_version_matches is false
      block:
        - name: Software | neovim | Install neovim | Include lazygit task
          ansible.builtin.import_tasks: lazygit.yml

        - name: Software | neovim | Install neovim | Download neovim
          ansible.builtin.get_url:
            url: "https://github.com/neovim/neovim/releases/download/v{{ nvim_version }}/nvim-linux64.tar.gz"
            dest: /tmp/
            checksum: sha256:https://github.com/neovim/neovim/releases/download/v{{ nvim_version }}/nvim-linux64.tar.gz.sha256sum
            owner: mose
            group: mose
            mode: '0755'

        - name: Software | neovim | Install neovim | Create opt folder
          ansible.builtin.file:
            path: /opt/neovim
            state: directory
            owner: mose
            group: mose
            mode: "0755"

        - name: Software | neovim | Install neovim | Unarchive
          ansible.builtin.unarchive:
            src: /tmp/nvim-linux64.tar.gz
            dest: /opt/neovim
            owner: mose
            group: mose
            extra_opts:
              - --strip
              - 1

        - name: Software | neovim | Install neovim | Copying files
          block:
            - name: Copy executable
              ansible.builtin.file:
                src: /opt/neovim/bin/nvim
                dest: /usr/local/bin/nvim
                state: link
                force: true
            - name: Copy desktop file
              ansible.builtin.copy:
                src: /opt/neovim/share/applications/nvim.desktop
                dest: /usr/local/share/applications/nvim.desktop
                owner: root
                group: root
                mode: '0644'
            - name: Create icon folder
              ansible.builtin.file:
                path: "{{ item }}"
                state: directory
                owner: root
                group: root
                mode: '0755'
              with_items:
                - /usr/local/share/icons/
                - /usr/local/share/icons/hicolor/
                - /usr/local/share/icons/hicolor/128x128
                - /usr/local/share/icons/hicolor/128x128/apps
            - name: Copy icon
              ansible.builtin.copy:
                src: /opt/neovim/share/icons/hicolor/128x128/apps/nvim.png
                dest: /usr/local/share/icons/hicolor/128x128/apps/nvim.png
                owner: root
                group: root
                mode: '0644'

    - name: Software | neovim | Configuration
      block:
        - name: Software | neovim | Configuration | Cloning config repo
          become: true
          become_user: mose
          ansible.builtin.git:
            repo: https://github.com/mosmuell/nvim_config.git
            dest: /home/mose/.config/nvim
            update: false

        - name: Software | neovim | Configuration | Check if pynvim virtualenv exists
          ansible.builtin.stat:
            path: /home/mose/.virtualenvs/pynvim
          register: folder_stat

        - name: Software | neovim | Configuration | virtualenv
          become: true
          become_user: mose
          when: not folder_stat.stat.exists
          block:
            - name: Software | neovim | Configuration | virtualenv | creating virtualenv folder
              ansible.builtin.file:
                path: /home/mose/{{ item.dir }}
                state: directory
                owner: mose
                group: mose
                mode: "0700"
              with_items:
                - { dir: .virtualenvs }

            - name: Include python essentials task
              ansible.builtin.import_tasks: python/essentials.yml

            - name: Software | neovim | Configuration | virtualenv | Installing virtualenv
              become: true
              become_user: mose
              community.general.pipx:
                name: virtualenv
                state: present

            - name: Software | neovim | Configuration | virtualenv | Creating virtualenv
              ansible.builtin.command:
                cmd: virtualenv /home/mose/.virtualenvs/pynvim/
                creates: /home/mose/.virtualenvs/pynvim/


            - name: Software | neovim | Configuration | virtualenv | Installing requirements
              ansible.builtin.command:
                cmd: /home/mose/.virtualenvs/pynvim/bin/pip3 install -r /home/mose/.config/nvim/pynvim_requirements.txt

        - name: Software | neovim | Configuration | Link root config directory
          block:
            - name: Software | neovim | Configuration | Link root config directory | Create config folder
              ansible.builtin.file:
                path: /root/{{ item.dir }}
                state: directory
                owner: root
                group: root
                mode: "0700"
              with_items:
                - { dir: .config }

            - name: Software | neovim | Configuration | Link root config directory | Create symbolic link
              ansible.builtin.file:
                src: /home/mose/.config/nvim
                dest: /root/.config/nvim
                state: link
                force: true
# vim: ft=yaml.ansible
