set-option -ga terminal-features ",alacritty:usstyle"
set -g default-terminal "tmux-256color"
set-option -a terminal-features 'alacritty:RGB'
set-option -a terminal-overrides 'alacritty:Tc'
set-option -g focus-events on

if-shell '[[ $(command -v /bin/zsh) = "/bin/zsh" ]]' {
	set-option -g default-shell /bin/zsh
} {
	set-option -g default-shell /bin/bash
}
# use C-a and for the prefix.
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix


# Start numbering of windows and panes with 1 and renumbering when closing a window
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Navigating from nvim into tmux panes with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Resizing nvim splits like tmux panes with awareness of vim splits.
bind -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up' 'resize-pane -U 1'
bind -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down' 'resize-pane -D 1'
bind -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left' 'resize-pane -L 1'
bind -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-Up resize-pane -U 1
bind-key -T copy-mode-vi M-Down resize-pane -D 1
bind-key -T copy-mode-vi M-Left resize-pane -L 1
bind-key -T copy-mode-vi M-Right resize-pane -R 1

# Swaping panes with Alt+Shift+{h,j,k,l} while staying in the previous pane
bind-key -n 'M-H' select-pane -L \; swap-pane -s '!' \; select-pane -L
bind-key -n 'M-J' select-pane -D \; swap-pane -s '!' \; select-pane -D
bind-key -n 'M-K' select-pane -U \; swap-pane -s '!' \; select-pane -U
bind-key -n 'M-L' select-pane -R \; swap-pane -s '!' \; select-pane -R

# split panes using h and v
bind-key v split-window -h
bind-key h split-window -v
unbind '"'
unbind %


# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window


# Easy config reload
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."


# Mouse Mode
set -g mouse on


# don't rename windows automatically
set-option -g allow-rename off


# Allow the arrow key to be used immediately after changing windows.
set-option -g repeat-time 0


# No delay for escape key press
set -sg escape-time 0

# synchronize all panes in a window
bind y setw synchronize-panes

# Lengthen the amount of time status messages are displayed
set-option -g display-time 3000
set-option -g display-panes-time 3000


#######################
### COPY MODE : VIM ###
#######################

# set vi mode for copy mode
setw -g mode-keys vi

# copy mode using 'Esc'
unbind [
bind-key Escape copy-mode

# Setup 'v' to begin selection, just like Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Setup 'y' to yank (copy), just like Vim
if-shell '[[ -z "$WAYLAND_DISPLAY" ]]' { 
	bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip -i"
} {
	bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "wl-copy"
}
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

# paste using 'p'
unbind p
bind p paste-buffer


######################
### DESIGN CHANGES ###
######################

# # Theme
# set-window-option -g window-status-current-style bold,bg=colour35,fg=colour234
# set-window-option -g window-status-style fg=colour35
# set -g window-status-activity-style bg=blue,fg=black
# set-option -g message-style bg=colour237,fg=colour231
# set-option -g pane-border-style fg=colour36
# set-option -g pane-active-border-style fg=colour35


# # Status Bar
# set -g status-justify centre
# set -g status-bg black
# set -g status-fg colour35
# set -g status-interval 60
# set -g status-left-length 50
# set -g status-left "#[bg=colour35]ðŸ’»#[fg=colour234,bold] #H #[bg=colour234,nobold]#[fg=colour35] [#S] $tmux_target_lower "
# set -g status-right '#[bg=colour234]#[fg=colour35]ðŸ“ˆ #(cut -d " " -f 1-3 /proc/loadavg) #[bg=colour35]ðŸ•” #[fg=colour234,bold]%d.%m %H:%M '

set -g status-justify centre
set -g status-style "bg=#4c566a,fg=#eceff4"
set -g status-left "#[fg=#bf616a,bg=#ebcb8b,bold] #S "
set -g status-right '#[bg=#a3be8c,fg=black,bold] ðŸ“ˆ #(cut -d " " -f 1-3 /proc/loadavg) #[bg=#ebcb8b,fg=#bf616a,bold] #H '
setw -g window-status-format "#[fg=#81a1c1,bg=#4c566a] #I:#W "
setw -g window-status-current-format "#[fg=#2e3440,bg=#81a1c1,bold] #I:#W "
setw -g window-status-separator ""


###############
### PLUGINS ###
###############

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Plugin options
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf) 
run ~/.tmux/plugins/tpm/tpm
