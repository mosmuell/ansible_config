" enabling copy and paste
set clipboard=unnamedplus

"show line numbers
set number

" colorscheme with light background
set background=dark

" enable using mouse
set mouse=a

hi Pmenu ctermbg=black ctermfg=white 
hi Pmenu guibg=#d7e5dc gui=NONE
hi PmenuSel guibg=#b7c7b7 gui=NONE
hi PmenuSbar guibg=#bcbcbc
hi PmenuThumb guibg=#585858
if has('nvim') " Neovim specific commands
	" echo "Loading nvim settings"

	" Changing listchars color
	hi Whitespace ctermfg=DarkGrey

else " Standard vim specific commands
	" echo "Loading vim settings"

	" Changing listchars color
	hi SpecialKey ctermfg=LightGrey

	" copy to clipboard
	xnoremap "+y y:call system("wl-copy", @")<cr>
	nnoremap "+p :let @"=substitute(system("wl-paste --no-newline"), '<C-v><C-m>', '', 'g')<cr>p
	nnoremap "*p :let @"=substitute(system("wl-paste --no-newline --primary"), '<C-v><C-m>', '', 'g')<cr>p
endif

" show tabs and white spaces
set list
syntax on
set listchars=tab:!·,trail:⎵,nbsp:⎵ " eol:⏎,
set hlsearch

filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces (expandtab) or use tab (noexpandtab)
set noexpandtab

" show current filename
set showtabline=2

"""""""""""""""""""
""" VIM PLUGINS """
"""""""""""""""""""

" installing vim-plug (plugin manager for nvim/vim) if not installed
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

call plug#begin()
Plug 'iamcco/markdown-preview.nvim', { 'do': ':call mkdp#util#install()', 'for': 'markdown', 'on': 'MarkdownPreview' }

"Brings you the IDE-like tabs into Vim, for easy navigation, and a nice, customizable look
Plug 'bagrat/vim-buffet'

Plug 'christoomey/vim-tmux-navigator'

" Conquer of Completion
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" NERDtree
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'ryanoasis/vim-devicons'

Plug 'preservim/nerdcommenter'
call plug#end()

source ~/.config/nvim/coc.vim

""""""""""""""""""""""
""" Nerd Commenter """
""""""""""""""""""""""

" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Mapping Ctrl-/ to toggle comments
vmap <C-_> <plug>NERDCommenterToggle
nmap <C-_> <plug>NERDCommenterToggle

"""""""""""""""""""""
""" Fuzzy Finding """
"""""""""""""""""""""

nmap <C-P> :FZF<CR>

""""""""""""""""""""""""""""""""""
""" Vim-Tmux Navigator Binding """
""""""""""""""""""""""""""""""""""

" Custom navigator bindings (as set in tmux)
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <M-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <M-j> :TmuxNavigateDown<cr>
nnoremap <silent> <M-k> :TmuxNavigateUp<cr>
nnoremap <silent> <M-l> :TmuxNavigateRight<cr>

"""""""""""""""""""""""
""" NERDtree config """
"""""""""""""""""""""""

" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" Start NERDTree and leave the cursor in it.
" autocmd VimEnter * NERDTree | wincmd p

let g:NERDTreeChDirMode = 1 "CWD is changed when NERDTree is first loaded to the dir it is initialised in
let g:NERDTreeMouseMode = 3 "open any node with single mouse click
nnoremap <C-n> :NERDTreeToggle<CR>
" nnoremap <C-f> :NERDTreeFind<CR>

" Make sure vim does not open files and other buffers on NerdTree window
autocmd BufEnter * if bufname('#') =~# "^NERD_tree_" && winnr('$') > 1 | b# | endif
let g:plug_window = 'noautocmd vertical topleft new'

" Check if NERDTree is open or active
function! IsNERDTreeOpen()
  return exists("t:NERDTreeBufName") && (bufwinnr(t:NERDTreeBufName) != -1)
endfunction

" Call NERDTreeFind iff NERDTree is active, current window contains a modifiable
" file, we're not in vimdiff and the current file is in the current working
" dir
function! SyncTree()
  if &modifiable && IsNERDTreeOpen() && strlen(expand('%')) > 0 && !&diff && stridx(expand('%:p:h'),getcwd()) >= 0
    NERDTreeFind
    wincmd p
  endif
endfunction

" This looks whether the current file is in the current working directory or
" one of its subfolders.
" " if stridx(expand('%:p:h'),getcwd()) >= 0 
" " 	echo "Yes"
" " 	echo expand('%:p:h')
" " 	echo getcwd()
" " else
" " 	echo "nope"
" " 	echo expand('%:p:h')
" " 	echo getcwd()
" " endif

" Highlight currently open buffer in NERDTree
autocmd BufRead * call SyncTree()

"""""""""""""""""""""""""
""" vim-buffet config """
"""""""""""""""""""""""""
let g:buffet_show_index = 1

nmap <silent> <M-1> <Plug>BuffetSwitch(1)<CR>:call SyncTree()<CR>
nmap <silent> <M-2> <Plug>BuffetSwitch(2)<CR>:call SyncTree()<CR>
nmap <silent> <M-3> <Plug>BuffetSwitch(3)<CR>:call SyncTree()<CR>
nmap <silent> <M-4> <Plug>BuffetSwitch(4)<CR>:call SyncTree()<CR>
nmap <silent> <M-5> <Plug>BuffetSwitch(5)<CR>:call SyncTree()<CR>
nmap <silent> <M-6> <Plug>BuffetSwitch(6)<CR>:call SyncTree()<CR>
nmap <silent> <M-7> <Plug>BuffetSwitch(7)<CR>:call SyncTree()<CR>
nmap <silent> <M-8> <Plug>BuffetSwitch(8)<CR>:call SyncTree()<CR>
nmap <silent> <M-9> <Plug>BuffetSwitch(9)<CR>:call SyncTree()<CR>
nmap <silent> <M-0> <Plug>BuffetSwitch(10)<CR>:call SyncTree()<CR>

" Key-mappings to navigate the buffers
noremap <silent> <Tab> :bn<CR>:call SyncTree()<CR> " tab
noremap <silent> <S-Tab> :bp<CR>:call SyncTree()<CR> " Shift + tab
noremap <silent> <M-q> :Bw<CR>:call SyncTree()<CR> " Alt + q
noremap <silent> <M-S-q> :Bw!<CR>:call SyncTree()<CR> " Alt + Shift + q

function! g:BuffetSetCustomColors()
	hi! BuffetCurrentBuffer cterm=NONE ctermbg=106 ctermfg=8 guibg=#b8bb26 guifg=#000000
	hi! BuffetTrunc cterm=bold ctermbg=66 ctermfg=8 guibg=#458588 guifg=#000000
	hi! BuffetBuffer cterm=NONE ctermbg=239 ctermfg=15 guibg=#504945 guifg=#000000
	hi! BuffetTab cterm=NONE ctermbg=66 ctermfg=8 guibg=#458588 guifg=#000000
	hi! BuffetActiveBuffer cterm=NONE ctermbg=10 ctermfg=239 guibg=#999999 guifg=#504945
endfunction
