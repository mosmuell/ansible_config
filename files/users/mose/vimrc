" enabling copy and paste
set clipboard=unnamedplus

"show line numbers
set number

" colorscheme with light background
set background=light

" enable using mouse
set mouse=a

if has('nvim') " Neovim specific commands
	" echo "Loading nvim settings"

	" Changing listchars color
	hi Whitespace ctermfg=LightGrey

else " Standard vim specific commands
	" echo "Loading vim settings"

	" Changing listchars color
	hi SpecialKey ctermfg=LightGrey

	" copy to clipboard
	xnoremap "+y y:call system("wl-copy", @")<cr>
	nnoremap "+p :let @"=substitute(system("wl-paste --no-newline"), '<C-v><C-m>', '', 'g')<cr>p
	nnoremap "*p :let @"=substitute(system("wl-paste --no-newline --primary"), '<C-v><C-m>', '', 'g')<cr>p
endif

" show tabs and white spaces
set list
syntax on
set listchars=tab:!·,trail:⎵,nbsp:⎵ " eol:⏎,
set hlsearch

filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces (expandtab) or use tab (noexpandtab)
set noexpandtab

" show current filename
set showtabline=2

"""""""""""""""""""
""" VIM PLUGINS """
"""""""""""""""""""

" installing vim-plug (plugin manager for nvim/vim) if not installed
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

call plug#begin()
" The default plugin directory will be as follows:
"   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'

" see: https://github.com/iamcco/markdown-preview.nvim/issues/50
" Plug 'iamcco/markdown-preview.nvim', { 'do': ':call mkdp#util#install()', 'for': ['markdown', 'vim-plug']}
Plug 'iamcco/markdown-preview.nvim', { 'do': ':call mkdp#util#install()', 'for': 'markdown', 'on': 'MarkdownPreview' }
call plug#end()
