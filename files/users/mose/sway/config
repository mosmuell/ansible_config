# sway config file

#################
### Variables ###
#################

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun,run | xargs swaymsg exec --

set $shell zsh

##########################
### Idle configuration ###
##########################

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
# exec_always swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          # timeout 600 'swaymsg "output * dpms off"' \
#          # resume 'swaymsg "output * dpms on"' \
#          before-sleep 'playerctl pause' \
#          before-sleep 'swaylock'

exec swayidle -w \
     timeout 300 'swaylock -f -c 000000 -i "/usr/share/backgrounds/wallpaper.jpg"' \
     timeout 600 'swaymsg "output * dpms off"' \
          resume 'swaymsg "output * dpms on"' \
     before-sleep 'swaylock -f -c 000000 -i "/usr/share/backgrounds/wallpaper.jpg"' \
     lock 'swaylock -f -c 000000 -i "/usr/share/backgrounds/wallpaper.jpg"'

###########################
### Window title format ###
###########################

## hiding window title
default_border pixel 1
default_floating_border pixel 1

# thin borders
hide_edge_borders both

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVuSans Mono Nerd Font 12

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- swaylock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec_always --no-startup-id 'nm-applet --indicator'


##############################
### MULTIMEDIA KEY SUPPORT ###
##############################

# Media volume controls

# bindsym XF86AudioRaiseVolume exec amixer -q -D default sset Master 5%+ && $refresh_i3blocks
# bindsym XF86AudioLowerVolume exec amixer -q -D default sset Master 5%- && $refresh_i3blocks
# bindsym XF86AudioMute exec amixer -q -D default sset Master toggle && $refresh_i3blocks
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Screen brightness controls
bindsym XF86MonBrightnessUp exec brightnessctl s +5% # increase screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl s 5%- # decrease screen brightness

# keyboard layout
input type:touchpad {
    tap enabled
    # natural_scroll enabled
}

input type:keyboard {
    xkb_layout ch
    xkb_variant de_nodeadkeys
    # xkb_options grp:alt_shift_toggle
}

# Bluetooth
# bindsym XF86Bluetooth exec rfkill toggle bluetooth

### Key bindings
#
# set $menu rofi -modi drun,run -show drun -show-icons 


    # Start a terminal
    bindsym $mod+Return exec $term -e ~/.tmux/tmux-first-unattached-session

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+r reload

    # locking the screen without ending the programs
    bindsym $mod+q exec "swaylock -f -c 000000"

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # focus the child container
    # bindsym $mod+d focus child

    # enter fullscreen mode for the focused container
    bindsym $mod+f fullscreen toggle

##################
### Workspaces ###
##################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $workspace1 "1 "
set $workspace2 "2 "
set $workspace3 "3 "
set $workspace4 "4 "
set $workspace5 "5 "
set $workspace6 "6 "
set $workspace7 "7 "
set $workspace8 "8 "
set $workspace9 "9 "
set $workspace10 "10 "

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left resize shrink width 10 px or 10 ppt
        bindsym $down resize grow height 10 px or 10 ppt
        bindsym $up resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

##################
### Scratchpad ###
##################
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# popups
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    #status_command i3status
    swaybar_command waybar
        position top
        #separator_symbol "|"
        tray_output primary
        colors {
            background $bg-color
                separator #757575
                #                  border             background         text
                focused_workspace  $bg-color          $bg-color          $text-color
                inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
                urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
        }
}

# default workspaces
## assign [class="Spotify"] $workspace10
for_window [class="Spotify"] move container to workspace $workspace10
# for_window [app_id="firefox"] move container to workspace $workspace1
# for_window [class="zoom"] move container to workspace $workspace9
assign [app_id="firefox"] $workspace1
assign [class="Signal"] $workspace9
assign [class="Skype"] $workspace9
assign [class="Thunderbird"] $workspace8
assign [class="zoom"] $workspace9
assign [class="Ferdi"] $workspace9
assign [class="rambox"] $workspace9
# for_window [class="rambox"] move container to workspace $workspace9

####################
### key-bindings ###
####################

## Screenshots
#interactive screenshot by pressing printscreen
# bindsym Print exec gnome-screenshot -a
bindsym Print exec import "/home/mose/Pictures/$(date)"
#crop-area screenshot by pressing Mod + printscreen
bindsym $mod+Print exec gnome-screenshot -a

#bindsym Print exec --no-startup-id import "/home/$USER/Pictures/$(date)"
#bindsym $mod+Print exec --no-startup-id import--window $(xdotool getactivewindow) "/home/$USER/Pictures/$(date)"
bindsym Shift+Print exec --no-startup-id import --select "/home/$USER/Pictures/$(date)"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# Moving workspaces between screens
bindsym $mod+p move workspace to output right
bindsym $mod+Shift+p move workspace to output up

# Applications
bindsym $mod+Shift+f exec firefox
bindsym $mod+Shift+e exec $term -e ranger
bindsym $mod+Shift+s exec flatpak run com.spotify.Client

########################
### MONITOR SETTINGS ###
########################

## external monitor
# exec_always xrandr --output eDP-1 --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI-1 --off --output HDMI-1-2 --primary --mode 1920x1080 --pos 1920x0 --rotate normal
#set $intern "eDP-1"
#set $extern "HDMI-1-2"
#exec_always xrandr --output "$intern" --output "$extern" --primary --right-of "$intern" --auto
# exec_always --no-startup-id autorandr --change

output eDP-1 scale 1
output eDP-1 pos 0 1440
output HDMI-A-1 pos 0 0
output DP-2 pos 2560 0

# enabling compositor for real transparency
# exec --no-startup-id xcompmgr &

# Setting wallpaper
output "*" bg /usr/share/backgrounds/wallpaper.jpg fill

# Window decorations
default_border none
gaps inner 5
# gaps outer -5

#################
### Autostart ###
#################

# starting lxpolkit as authentification manager
exec --no-startup-id lxpolkit &

# starting notification agent
# exec killall -q notify-send
exec --no-startup-id dunst -config ~/.config/dunst/dunstrc

exec --no-startup-id swaymsg 'workspace $workspace9; exec rambox'
exec --no-startup-id swaymsg 'workspace $workspace2; exec $term -e ~/.tmux/tmux-first-unattached-session'

exec flatpak run com.synology.SynologyDrive

include /etc/sway/config.d/*
